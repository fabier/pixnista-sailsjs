<!DOCTYPE html>
<html ng-app="PixnistaModule">
    <head>
        <meta charset="UTF-8">
        <title><%= title ?  title + ' - ' : ''%>Pixinista</title>
        <% include ../partials/head %>
    </head>

    <body>
        <% include ../partials/header %>
        <%- body %>

        <!--
            Client-side Templates
            ========================

            HTML templates are important prerequisites of modern, rich client applications.
            To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
            that you load these templates client-side.

            By default, your Gruntfile is configured to automatically load and precompile
            client-side JST templates in your `assets/templates` folder, then
            include them here automatically (between TEMPLATES and TEMPLATES END).

            To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
            For example, here are a few things you could do:

                + Import templates from other directories
                + Use a different template engine (handlebars, jade, dust, etc.)
                + Internationalize your client-side templates using a server-side
                  stringfile before they're served.
        -->

        <!--TEMPLATES-->
        
        <!--TEMPLATES END-->


        <!--

          Client-side Javascript
          ========================

          You can always bring in JS files manually with `script` tags, or asynchronously
          on the client using a solution like AMD (RequireJS).  Or, if you like, you can
          take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

          By default, files in your `assets/js` folder are included here
          automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
          CoffeeScript (.coffee) are supported. In production, your scripts will be minified
          and concatenated into a single file.

          To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
          For example, here are a few things you could do:

              + Change the order of your scripts
              + Import scripts from other directories
              + Use a different preprocessor, like TypeScript

        -->

        <% include ../partials/footer %>

        <!--SCRIPTS-->
        <script src="/js/dependencies/sails.io.js"></script>
        <script src="/js/angular.js"></script>
        <script src="/js/PixnistaModule.js"></script>
        <script src="/js/angular-animate.js"></script>
        <script src="/js/angular-mocks.js"></script>
        <script src="/js/angular-resource.js"></script>
        <script src="/js/angular-route.js"></script>
        <script src="/js/compareto.js"></script>
        <script src="/js/public/HomepageController.js"></script>
        <script src="/js/public/LoginController.js"></script>
        <script src="/js/public/SigninController.js"></script>
        <script src="/js/public/SignupController.js"></script>
        <script src="/js/public/post/CreatePostController.js"></script>
        <script src="/js/public/post/ShowPostController.js"></script>
        <script src="/js/public/postComment/CreatePostCommentController.js"></script>
        <script src="/js/private/DashboardController.js"></script>
        <script src="/js/dist/angular-toastr.tpls.js"></script>
        <script src="/js/dist/jquery.js"></script>
        <script src="/js/dist/js/bootstrap.js"></script>
        <script src="/js/dist/min/dropzone.min.js"></script>
        <!--SCRIPTS END-->
    </body>
</html>